#ifndef DEX_H_
#define DEX_H_

#include <inttypes.h>

struct string_id_item {
  uint32_t string_data_off;
};

// A data type
struct type_id_item {
  uint32_t descriptor_idx;
};

// A method type
struct proto_id_item {
  uint32_t shorty_idx;
  uint32_t return_type_idx;
  uint32_t parameters_off;
};

// A field
struct field_id_item {
  uint16_t class_idx;
  uint16_t type_idx;
  uint32_t name_idx;
};

// A method
struct method_id_item {
  uint16_t class_idx;
  uint16_t proto_idx;
  uint32_t name_idx;
};

// A class
struct class_def_item {
  uint32_t class_idx;
  uint32_t access_flags;
  uint32_t superclass_idx;
  uint32_t interfaces_off;
  uint32_t source_file_idx;
  uint32_t annotations_off;
  uint32_t class_data_off;
  uint32_t static_values_off;
};

static constexpr uint32_t NO_INDEX = 0xffffffff;

enum CLASS_ACCESS_FLAGS {
  CLASS_ACC_PUBLIC = 0x1,
  CLASS_ACC_PRIVATE = 0x2,
  CLASS_ACC_PROTECTED = 0x4,
  CLASS_ACC_STATIC = 0x8,
  CLASS_ACC_FINAL = 0x10,
  CLASS_ACC_INTERFACE = 0x200,
  CLASS_ACC_ABSTRACT = 0x400,
  CLASS_ACC_SYNTHETIC = 0x1000,
  CLASS_ACC_ANNOTATION = 0x2000,
  CLASS_ACC_ENUM = 0x4000,
};

enum FIELD_ACCESS_FLAGS {
  FIELD_ACC_PUBLIC = 0x1,
  FIELD_ACC_PRIVATE = 0x2,
  FIELD_ACC_PROTECTED = 0x4,
  FIELD_ACC_STATIC = 0x8,
  FIELD_ACC_FINAL = 0x10,
  FIELD_ACC_VOLATILE = 0x40,
  FIELD_ACC_TRANSIENT = 0x80,
  FIELD_ACC_SYNTHETIC = 0x1000,
  FIELD_ACC_ENUM = 0x4000,
};

enum METHOD_ACCESS_FLAGS {
  METHOD_ACC_PUBLIC = 0x1,
  METHOD_ACC_PRIVATE = 0x2,
  METHOD_ACC_PROTECTED = 0x4,
  METHOD_ACC_STATIC = 0x8,
  METHOD_ACC_FINAL = 0x10,
  METHOD_ACC_SYNCHRONIZED = 0x20,
  METHOD_ACC_BRIDGE = 0x40,
  METHOD_ACC_VARARGS = 0x80,
  METHOD_ACC_NATIVE = 0x100,
  METHOD_ACC_ABSTRACT = 0x400,
  METHOD_ACC_STRICT = 0x800,
  METHOD_ACC_SYNTHETIC = 0x1000,
  METHOD_ACC_CONSTRUCTOR = 0x10000,
  METHOD_ACC_DECLARED_SYNCHRONIZED = 0x20000,
};

enum ANNOTATION_VISIBILITY {
  VISIBILITY_BUILD = 0x0,
  VISIBILITY_RUNTIME = 0x1,
  VISIBILITY_SYSTEM = 0x2,
};

enum ENCODED_VALUE_FORMATS {
  ENCODED_VALUE_BYTE = 0x00,
  ENCODED_VALUE_SHORT = 0x02,
  ENCODED_VALUE_CHAR = 0x03,
  ENCODED_VALUE_INT = 0x04,
  ENCODED_VALUE_LONG = 0x06,
  ENCODED_VALUE_FLOAT = 0x10,
  ENCODED_VALUE_DOUBLE = 0x11,
  ENCODED_VALUE_STRING = 0x17,
  ENCODED_VALUE_TYPE = 0x18,
  ENCODED_VALUE_FIELD = 0x19,
  ENCODED_VALUE_METHOD = 0x1a,
  ENCODED_VALUE_ENUM = 0x1b,
  ENCODED_VALUE_ARRAY = 0x1c,
  ENCODED_VALUE_ANNOTATION = 0x1d,
  ENCODED_VALUE_NULL = 0x1e,
  ENCODED_VALUE_BOOLEAN = 0x1f,
};

enum DEX_BYTECODE_OP {
    DEX_OP_NOP = 0x00,
    DEX_OP_MOVE = 0x01,
    DEX_OP_MOVE_FROM16 = 0x02,
    DEX_OP_MOVE_16 = 0x03,
    DEX_OP_MOVE_WIDE = 0x04,
    DEX_OP_MOVE_WIDE_FROM16 = 0x05,
    DEX_OP_MOVE_WIDE_16 = 0x06,
    DEX_OP_MOVE_OBJECT = 0x07,
    DEX_OP_MOVE_OBJECT_FROM16 = 0x08,
    DEX_OP_MOVE_OBJECT_16 = 0x09,
    DEX_OP_MOVE_RESULT = 0x0a,
    DEX_OP_MOVE_RESULT_WIDE = 0x0b,
    DEX_OP_MOVE_RESULT_OBJECT = 0x0c,
    DEX_OP_MOVE_EXCEPTION = 0x0d,
    DEX_OP_RETURN_VOID = 0x0e,
    DEX_OP_RETURN = 0x0f,
    DEX_OP_RETURN_WIDE = 0x10,
    DEX_OP_RETURN_OBJECT = 0x11,
    DEX_OP_CONST_4 = 0x12,
    DEX_OP_CONST_16 = 0x13,
    DEX_OP_CONST = 0x14,
    DEX_OP_CONST_HIGH16 = 0x15,
    DEX_OP_CONST_WIDE_16 = 0x16,
    DEX_OP_CONST_WIDE_32 = 0x17,
    DEX_OP_CONST_WIDE = 0x18,
    DEX_OP_CONST_WIDE_HIGH16 = 0x19,
    DEX_OP_CONST_STRING = 0x1a,
    DEX_OP_CONST_STRING_JUMBO = 0x1b,
    DEX_OP_CONST_CLASS = 0x1c,
    DEX_OP_MONITOR_ENTER = 0x1d,
    DEX_OP_MONITOR_EXIT = 0x1e,
    DEX_OP_CHECK_CAST = 0x1f,
    DEX_OP_INSTANCE_OF = 0x20,
    DEX_OP_ARRAY_LENGTH = 0x21,
    DEX_OP_NEW_INSTANCE = 0x22,
    DEX_OP_NEW_ARRAY = 0x23,
    DEX_OP_FILLED_NEW_ARRAY = 0x24,
    DEX_OP_FILLED_NEW_ARRAY_RANGE = 0x25,
    DEX_OP_FILL_ARRAY_DATA = 0x26,
    DEX_OP_THROW = 0x27,
    DEX_OP_GOTO = 0x28,
    DEX_OP_GOTO_16 = 0x29,
    DEX_OP_GOTO_32 = 0x2a,
    DEX_OP_PACKED_SWITCH = 0x2b,
    DEX_OP_SPARSE_SWITCH = 0x2c,
    DEX_OP_CMPL_FLOAT = 0x2d,
    DEX_OP_CMPG_FLOAT = 0x2e,
    DEX_OP_CMPL_DOUBLE = 0x2f,
    DEX_OP_CMPG_DOUBLE = 0x30,
    DEX_OP_CMP_LONG = 0x31,
    DEX_OP_IF_EQ = 0x32,
    DEX_OP_IF_NE = 0x33,
    DEX_OP_IF_LT = 0x34,
    DEX_OP_IF_GE = 0x35,
    DEX_OP_IF_GT = 0x36,
    DEX_OP_IF_LE = 0x37,
    DEX_OP_IF_EQZ = 0x38,
    DEX_OP_IF_NEZ = 0x39,
    DEX_OP_IF_LTZ = 0x3a,
    DEX_OP_IF_GEZ = 0x3b,
    DEX_OP_IF_GTZ = 0x3c,
    DEX_OP_IF_LEZ = 0x3d,
    DEX_OP_AGET = 0x44,
    DEX_OP_AGET_WIDE = 0x45,
    DEX_OP_AGET_OBJECT = 0x46,
    DEX_OP_AGET_BOOLEAN = 0x47,
    DEX_OP_AGET_BYTE = 0x48,
    DEX_OP_AGET_CHAR = 0x49,
    DEX_OP_AGET_SHORT = 0x4a,
    DEX_OP_APUT = 0x4b,
    DEX_OP_APUT_WIDE = 0x4c,
    DEX_OP_APUT_OBJECT = 0x4d,
    DEX_OP_APUT_BOOLEAN = 0x4e,
    DEX_OP_APUT_BYTE = 0x4f,
    DEX_OP_APUT_CHAR = 0x50,
    DEX_OP_APUT_SHORT = 0x51,
    DEX_OP_IGET = 0x52,
    DEX_OP_IGET_WIDE = 0x53,
    DEX_OP_IGET_OBJECT = 0x54,
    DEX_OP_IGET_BOOLEAN = 0x55,
    DEX_OP_IGET_BYTE = 0x56,
    DEX_OP_IGET_CHAR = 0x57,
    DEX_OP_IGET_SHORT = 0x58,
    DEX_OP_IPUT = 0x59,
    DEX_OP_IPUT_WIDE = 0x5a,
    DEX_OP_IPUT_OBJECT = 0x5b,
    DEX_OP_IPUT_BOOLEAN = 0x5c,
    DEX_OP_IPUT_BYTE = 0x5d,
    DEX_OP_IPUT_CHAR = 0x5e,
    DEX_OP_IPUT_SHORT = 0x5f,
    DEX_OP_SGET = 0x60,
    DEX_OP_SGET_WIDE = 0x61,
    DEX_OP_SGET_OBJECT = 0x62,
    DEX_OP_SGET_BOOLEAN = 0x63,
    DEX_OP_SGET_BYTE = 0x64,
    DEX_OP_SGET_CHAR = 0x65,
    DEX_OP_SGET_SHORT = 0x66,
    DEX_OP_SPUT = 0x67,
    DEX_OP_SPUT_WIDE = 0x68,
    DEX_OP_SPUT_OBJECT = 0x69,
    DEX_OP_SPUT_BOOLEAN = 0x6a,
    DEX_OP_SPUT_BYTE = 0x6b,
    DEX_OP_SPUT_CHAR = 0x6c,
    DEX_OP_SPUT_SHORT = 0x6d,
    DEX_OP_INVOKE_VIRTUAL = 0x6e,
    DEX_OP_INVOKE_SUPER = 0x6f,
    DEX_OP_INVOKE_DIRECT = 0x70,
    DEX_OP_INVOKE_STATIC = 0x71,
    DEX_OP_INVOKE_INTERFACE = 0x72,
    DEX_OP_INVOKE_VIRTUAL_RANGE = 0x74,
    DEX_OP_INVOKE_SUPER_RANGE = 0x75,
    DEX_OP_INVOKE_DIRECT_RANGE = 0x76,
    DEX_OP_INVOKE_STATIC_RANGE = 0x77,
    DEX_OP_INVOKE_INTERFACE_RANGE = 0x78,
    DEX_OP_NEG_INT = 0x7b,
    DEX_OP_NOT_INT = 0x7c,
    DEX_OP_NEG_LONG = 0x7d,
    DEX_OP_NOT_LONG = 0x7e,
    DEX_OP_NEG_FLOAT = 0x7f,
    DEX_OP_NEG_DOUBLE = 0x80,
    DEX_OP_INT_TO_LONG = 0x81,
    DEX_OP_INT_TO_FLOAT = 0x82,
    DEX_OP_INT_TO_DOUBLE = 0x83,
    DEX_OP_LONG_TO_INT = 0x84,
    DEX_OP_LONG_TO_FLOAT = 0x85,
    DEX_OP_LONG_TO_DOUBLE = 0x86,
    DEX_OP_FLOAT_TO_INT = 0x87,
    DEX_OP_FLOAT_TO_LONG = 0x88,
    DEX_OP_FLOAT_TO_DOUBLE = 0x89,
    DEX_OP_DOUBLE_TO_INT = 0x8a,
    DEX_OP_DOUBLE_TO_LONG = 0x8b,
    DEX_OP_DOUBLE_TO_FLOAT = 0x8c,
    DEX_OP_INT_TO_BYTE = 0x8d,
    DEX_OP_INT_TO_CHAR = 0x8e,
    DEX_OP_INT_TO_SHORT = 0x8f,
    DEX_OP_ADD_INT = 0x90,
    DEX_OP_SUB_INT = 0x91,
    DEX_OP_MUL_INT = 0x92,
    DEX_OP_DIV_INT = 0x93,
    DEX_OP_REM_INT = 0x94,
    DEX_OP_AND_INT = 0x95,
    DEX_OP_OR_INT = 0x96,
    DEX_OP_XOR_INT = 0x97,
    DEX_OP_SHL_INT = 0x98,
    DEX_OP_SHR_INT = 0x99,
    DEX_OP_USHR_INT = 0x9a,
    DEX_OP_ADD_LONG = 0x9b,
    DEX_OP_SUB_LONG = 0x9c,
    DEX_OP_MUL_LONG = 0x9d,
    DEX_OP_DIV_LONG = 0x9e,
    DEX_OP_REM_LONG = 0x9f,
    DEX_OP_AND_LONG = 0xa0,
    DEX_OP_OR_LONG = 0xa1,
    DEX_OP_XOR_LONG = 0xa2,
    DEX_OP_SHL_LONG = 0xa3,
    DEX_OP_SHR_LONG = 0xa4,
    DEX_OP_USHR_LONG = 0xa5,
    DEX_OP_ADD_FLOAT = 0xa6,
    DEX_OP_SUB_FLOAT = 0xa7,
    DEX_OP_MUL_FLOAT = 0xa8,
    DEX_OP_DIV_FLOAT = 0xa9,
    DEX_OP_REM_FLOAT = 0xaa,
    DEX_OP_ADD_DOUBLE = 0xab,
    DEX_OP_SUB_DOUBLE = 0xac,
    DEX_OP_MUL_DOUBLE = 0xad,
    DEX_OP_DIV_DOUBLE = 0xae,
    DEX_OP_REM_DOUBLE = 0xaf,
    DEX_OP_ADD_INT_2ADDR = 0xb0,
    DEX_OP_SUB_INT_2ADDR = 0xb1,
    DEX_OP_MUL_INT_2ADDR = 0xb2,
    DEX_OP_DIV_INT_2ADDR = 0xb3,
    DEX_OP_REM_INT_2ADDR = 0xb4,
    DEX_OP_AND_INT_2ADDR = 0xb5,
    DEX_OP_OR_INT_2ADDR = 0xb6,
    DEX_OP_XOR_INT_2ADDR = 0xb7,
    DEX_OP_SHL_INT_2ADDR = 0xb8,
    DEX_OP_SHR_INT_2ADDR = 0xb9,
    DEX_OP_USHR_INT_2ADDR = 0xba,
    DEX_OP_ADD_LONG_2ADDR = 0xbb,
    DEX_OP_SUB_LONG_2ADDR = 0xbc,
    DEX_OP_MUL_LONG_2ADDR = 0xbd,
    DEX_OP_DIV_LONG_2ADDR = 0xbe,
    DEX_OP_REM_LONG_2ADDR = 0xbf,
    DEX_OP_AND_LONG_2ADDR = 0xc0,
    DEX_OP_OR_LONG_2ADDR = 0xc1,
    DEX_OP_XOR_LONG_2ADDR = 0xc2,
    DEX_OP_SHL_LONG_2ADDR = 0xc3,
    DEX_OP_SHR_LONG_2ADDR = 0xc4,
    DEX_OP_USHR_LONG_2ADDR = 0xc5,
    DEX_OP_ADD_FLOAT_2ADDR = 0xc6,
    DEX_OP_SUB_FLOAT_2ADDR = 0xc7,
    DEX_OP_MUL_FLOAT_2ADDR = 0xc8,
    DEX_OP_DIV_FLOAT_2ADDR = 0xc9,
    DEX_OP_REM_FLOAT_2ADDR = 0xca,
    DEX_OP_ADD_DOUBLE_2ADDR = 0xcb,
    DEX_OP_SUB_DOUBLE_2ADDR = 0xcc,
    DEX_OP_MUL_DOUBLE_2ADDR = 0xcd,
    DEX_OP_DIV_DOUBLE_2ADDR = 0xce,
    DEX_OP_REM_DOUBLE_2ADDR = 0xcf,
    DEX_OP_ADD_INT_LIT16 = 0xd0,
    DEX_OP_RSUB_INT = 0xd1,
    DEX_OP_MUL_INT_LIT16 = 0xd2,
    DEX_OP_DIV_INT_LIT16 = 0xd3,
    DEX_OP_REM_INT_LIT16 = 0xd4,
    DEX_OP_AND_INT_LIT16 = 0xd5,
    DEX_OP_OR_INT_LIT16 = 0xd6,
    DEX_OP_XOR_INT_LIT16 = 0xd7,
    DEX_OP_ADD_INT_LIT8 = 0xd8,
    DEX_OP_RSUB_INT_LIT8 = 0xd9,
    DEX_OP_MUL_INT_LIT8 = 0xda,
    DEX_OP_DIV_INT_LIT8 = 0xdb,
    DEX_OP_REM_INT_LIT8 = 0xdc,
    DEX_OP_AND_INT_LIT8 = 0xdd,
    DEX_OP_OR_INT_LIT8 = 0xde,
    DEX_OP_XOR_INT_LIT8 = 0xdf,
    DEX_OP_SHL_INT_LIT8 = 0xe0,
    DEX_OP_SHR_INT_LIT8 = 0xe1,
    DEX_OP_USHR_INT_LIT8 = 0xe2,
};

enum DEX_DBG_CODE {
  DBG_END_SEQUENCE = 0x00,
  DBG_ADVANCE_PC = 0x01,
  DBG_ADVANCE_LINE = 0x02,
  DBG_START_LOCAL = 0x03,
  DBG_START_LOCAL_EXTENDED = 0x04,
  DBG_END_LOCAL = 0x05,
  DBG_RESTART_LOCAL = 0x06,
  DBG_SET_PROLOGUE_END = 0x07,
  DBG_SET_EPILOGUE_BEGIN = 0x08,
  DBG_SET_FILE = 0x09,
};

#endif  // DEX_H_
