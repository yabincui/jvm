#ifndef DEX_NAMEMAP_H_
#define DEX_NAMEMAP_H_

#include <unordered_map>
#include <vector>

#include "dex.h"

static std::vector<std::pair<int, const char*>> CLASS_ACCESS_FLAGS_NAMEVECTOR = {
  {CLASS_ACC_PUBLIC, "CLASS_ACC_PUBLIC"},
  {CLASS_ACC_PRIVATE, "CLASS_ACC_PRIVATE"},
  {CLASS_ACC_PROTECTED, "CLASS_ACC_PROTECTED"},
  {CLASS_ACC_STATIC, "CLASS_ACC_STATIC"},
  {CLASS_ACC_FINAL, "CLASS_ACC_FINAL"},
  {CLASS_ACC_INTERFACE, "CLASS_ACC_INTERFACE"},
  {CLASS_ACC_ABSTRACT, "CLASS_ACC_ABSTRACT"},
  {CLASS_ACC_SYNTHETIC, "CLASS_ACC_SYNTHETIC"},
  {CLASS_ACC_ANNOTATION, "CLASS_ACC_ANNOTATION"},
  {CLASS_ACC_ENUM, "CLASS_ACC_ENUM"},
};

static std::vector<std::pair<int, const char*>> FIELD_ACCESS_FLAGS_NAMEVECTOR = {
  {FIELD_ACC_PUBLIC, "FIELD_ACC_PUBLIC"},
  {FIELD_ACC_PRIVATE, "FIELD_ACC_PRIVATE"},
  {FIELD_ACC_PROTECTED, "FIELD_ACC_PROTECTED"},
  {FIELD_ACC_STATIC, "FIELD_ACC_STATIC"},
  {FIELD_ACC_FINAL, "FIELD_ACC_FINAL"},
  {FIELD_ACC_VOLATILE, "FIELD_ACC_VOLATILE"},
  {FIELD_ACC_TRANSIENT, "FIELD_ACC_TRANSIENT"},
  {FIELD_ACC_SYNTHETIC, "FIELD_ACC_SYNTHETIC"},
  {FIELD_ACC_ENUM, "FIELD_ACC_ENUM"},
};

static std::vector<std::pair<int, const char*>> METHOD_ACCESS_FLAGS_NAMEVECTOR = {
  {METHOD_ACC_PUBLIC, "METHOD_ACC_PUBLIC"},
  {METHOD_ACC_PRIVATE, "METHOD_ACC_PRIVATE"},
  {METHOD_ACC_PROTECTED, "METHOD_ACC_PROTECTED"},
  {METHOD_ACC_STATIC, "METHOD_ACC_STATIC"},
  {METHOD_ACC_FINAL, "METHOD_ACC_FINAL"},
  {METHOD_ACC_SYNCHRONIZED, "METHOD_ACC_SYNCHRONIZED"},
  {METHOD_ACC_BRIDGE, "METHOD_ACC_BRIDGE"},
  {METHOD_ACC_VARARGS, "METHOD_ACC_VARARGS"},
  {METHOD_ACC_NATIVE, "METHOD_ACC_NATIVE"},
  {METHOD_ACC_ABSTRACT, "METHOD_ACC_ABSTRACT"},
  {METHOD_ACC_STRICT, "METHOD_ACC_STRICT"},
  {METHOD_ACC_SYNTHETIC, "METHOD_ACC_SYNTHETIC"},
  {METHOD_ACC_CONSTRUCTOR, "METHOD_ACC_CONSTRUCTOR"},
  {METHOD_ACC_DECLARED_SYNCHRONIZED, "METHOD_ACC_DECLARED_SYNCHRONIZED"},
};

static std::unordered_map<int, const char*> ANNOTATION_VISIBILITY_NAMEMAP = {
  {VISIBILITY_BUILD, "VISIBILITY_BUILD"},
  {VISIBILITY_RUNTIME, "VISIBILITY_RUNTIME"},
  {VISIBILITY_SYSTEM, "VISIBILITY_SYSTEM"},
};

static std::unordered_map<int, const char*> DEX_OP_NAMEMAP = {
    {DEX_OP_NOP, "NOP"},
    {DEX_OP_MOVE, "MOVE"},
    {DEX_OP_MOVE_FROM16, "MOVE_FROM16"},
    {DEX_OP_MOVE_16, "MOVE_16"},
    {DEX_OP_MOVE_WIDE, "MOVE_WIDE"},
    {DEX_OP_MOVE_WIDE_FROM16, "MOVE_WIDE_FROM16"},
    {DEX_OP_MOVE_WIDE_16, "MOVE_WIDE_16"},
    {DEX_OP_MOVE_OBJECT, "MOVE_OBJECT"},
    {DEX_OP_MOVE_OBJECT_FROM16, "MOVE_OBJECT_FROM16"},
    {DEX_OP_MOVE_OBJECT_16, "MOVE_OBJECT_16"},
    {DEX_OP_MOVE_RESULT, "MOVE_RESULT"},
    {DEX_OP_MOVE_RESULT_WIDE, "MOVE_RESULT_WIDE"},
    {DEX_OP_MOVE_RESULT_OBJECT, "MOVE_RESULT_OBJECT"},
    {DEX_OP_MOVE_EXCEPTION, "MOVE_EXCEPTION"},
    {DEX_OP_RETURN_VOID, "RETURN_VOID"},
    {DEX_OP_RETURN, "RETURN"},
    {DEX_OP_RETURN_WIDE, "RETURN_WIDE"},
    {DEX_OP_RETURN_OBJECT, "RETURN_OBJECT"},
    {DEX_OP_CONST_4, "CONST_4"},
    {DEX_OP_CONST_16, "CONST_16"},
    {DEX_OP_CONST, "CONST"},
    {DEX_OP_CONST_HIGH16, "CONST_HIGH16"},
    {DEX_OP_CONST_WIDE_16, "CONST_WIDE_16"},
    {DEX_OP_CONST_WIDE_32, "CONST_WIDE_32"},
    {DEX_OP_CONST_WIDE, "CONST_WIDE"},
    {DEX_OP_CONST_WIDE_HIGH16, "CONST_WIDE_HIGH16"},
    {DEX_OP_CONST_STRING, "CONST_STRING"},
    {DEX_OP_CONST_STRING_JUMBO, "CONST_STRING_JUMBO"},
    {DEX_OP_CONST_CLASS, "CONST_CLASS"},
    {DEX_OP_MONITOR_ENTER, "MONITOR_ENTER"},
    {DEX_OP_MONITOR_EXIT, "MONITOR_EXIT"},
    {DEX_OP_CHECK_CAST, "CHECK_CAST"},
    {DEX_OP_INSTANCE_OF, "INSTANCE_OF"},
    {DEX_OP_ARRAY_LENGTH, "ARRAY_LENGTH"},
    {DEX_OP_NEW_INSTANCE, "NEW_INSTANCE"},
    {DEX_OP_NEW_ARRAY, "NEW_ARRAY"},
    {DEX_OP_FILLED_NEW_ARRAY, "FILLED_NEW_ARRAY"},
    {DEX_OP_FILLED_NEW_ARRAY_RANGE, "FILLED_NEW_ARRAY_RANGE"},
    {DEX_OP_FILL_ARRAY_DATA, "FILL_ARRAY_DATA"},
    {DEX_OP_THROW, "THROW"},
    {DEX_OP_GOTO, "GOTO"},
    {DEX_OP_GOTO_16, "GOTO_16"},
    {DEX_OP_GOTO_32, "GOTO_32"},
    {DEX_OP_PACKED_SWITCH, "PACKED_SWITCH"},
    {DEX_OP_SPARSE_SWITCH, "SPARSE_SWITCH"},
    {DEX_OP_CMPL_FLOAT, "CMPL_FLOAT"},
    {DEX_OP_CMPG_FLOAT, "CMPG_FLOAT"},
    {DEX_OP_CMPL_DOUBLE, "CMPL_DOUBLE"},
    {DEX_OP_CMPG_DOUBLE, "CMPG_DOUBLE"},
    {DEX_OP_CMP_LONG, "CMP_LONG"},
    {DEX_OP_IF_EQ, "IF_EQ"},
    {DEX_OP_IF_NE, "IF_NE"},
    {DEX_OP_IF_LT, "IF_LT"},
    {DEX_OP_IF_GE, "IF_GE"},
    {DEX_OP_IF_GT, "IF_GT"},
    {DEX_OP_IF_LE, "IF_LE"},
    {DEX_OP_IF_EQZ, "IF_EQZ"},
    {DEX_OP_IF_NEZ, "IF_NEZ"},
    {DEX_OP_IF_LTZ, "IF_LTZ"},
    {DEX_OP_IF_GEZ, "IF_GEZ"},
    {DEX_OP_IF_GTZ, "IF_GTZ"},
    {DEX_OP_IF_LEZ, "IF_LEZ"},
    {DEX_OP_AGET, "AGET"},
    {DEX_OP_AGET_WIDE, "AGET_WIDE"},
    {DEX_OP_AGET_OBJECT, "AGET_OBJECT"},
    {DEX_OP_AGET_BOOLEAN, "AGET_BOOLEAN"},
    {DEX_OP_AGET_BYTE, "AGET_BYTE"},
    {DEX_OP_AGET_CHAR, "AGET_CHAR"},
    {DEX_OP_AGET_SHORT, "AGET_SHORT"},
    {DEX_OP_APUT, "APUT"},
    {DEX_OP_APUT_WIDE, "APUT_WIDE"},
    {DEX_OP_APUT_OBJECT, "APUT_OBJECT"},
    {DEX_OP_APUT_BOOLEAN, "APUT_BOOLEAN"},
    {DEX_OP_APUT_BYTE, "APUT_BYTE"},
    {DEX_OP_APUT_CHAR, "APUT_CHAR"},
    {DEX_OP_APUT_SHORT, "APUT_SHORT"},
    {DEX_OP_IGET, "IGET"},
    {DEX_OP_IGET_WIDE, "IGET_WIDE"},
    {DEX_OP_IGET_OBJECT, "IGET_OBJECT"},
    {DEX_OP_IGET_BOOLEAN, "IGET_BOOLEAN"},
    {DEX_OP_IGET_BYTE, "IGET_BYTE"},
    {DEX_OP_IGET_CHAR, "IGET_CHAR"},
    {DEX_OP_IGET_SHORT, "IGET_SHORT"},
    {DEX_OP_IPUT, "IPUT"},
    {DEX_OP_IPUT_WIDE, "IPUT_WIDE"},
    {DEX_OP_IPUT_OBJECT, "IPUT_OBJECT"},
    {DEX_OP_IPUT_BOOLEAN, "IPUT_BOOLEAN"},
    {DEX_OP_IPUT_BYTE, "IPUT_BYTE"},
    {DEX_OP_IPUT_CHAR, "IPUT_CHAR"},
    {DEX_OP_IPUT_SHORT, "IPUT_SHORT"},
    {DEX_OP_SGET, "SGET"},
    {DEX_OP_SGET_WIDE, "SGET_WIDE"},
    {DEX_OP_SGET_OBJECT, "SGET_OBJECT"},
    {DEX_OP_SGET_BOOLEAN, "SGET_BOOLEAN"},
    {DEX_OP_SGET_BYTE, "SGET_BYTE"},
    {DEX_OP_SGET_CHAR, "SGET_CHAR"},
    {DEX_OP_SGET_SHORT, "SGET_SHORT"},
    {DEX_OP_SPUT, "SPUT"},
    {DEX_OP_SPUT_WIDE, "SPUT_WIDE"},
    {DEX_OP_SPUT_OBJECT, "SPUT_OBJECT"},
    {DEX_OP_SPUT_BOOLEAN, "SPUT_BOOLEAN"},
    {DEX_OP_SPUT_BYTE, "SPUT_BYTE"},
    {DEX_OP_SPUT_CHAR, "SPUT_CHAR"},
    {DEX_OP_SPUT_SHORT, "SPUT_SHORT"},
    {DEX_OP_INVOKE_VIRTUAL, "INVOKE_VIRTUAL"},
    {DEX_OP_INVOKE_SUPER, "INVOKE_SUPER"},
    {DEX_OP_INVOKE_DIRECT, "INVOKE_DIRECT"},
    {DEX_OP_INVOKE_STATIC, "INVOKE_STATIC"},
    {DEX_OP_INVOKE_INTERFACE, "INVOKE_INTERFACE"},
    {DEX_OP_INVOKE_VIRTUAL_RANGE, "INVOKE_VIRTUAL_RANGE"},
    {DEX_OP_INVOKE_SUPER_RANGE, "INVOKE_SUPER_RANGE"},
    {DEX_OP_INVOKE_DIRECT_RANGE, "INVOKE_DIRECT_RANGE"},
    {DEX_OP_INVOKE_STATIC_RANGE, "INVOKE_STATIC_RANGE"},
    {DEX_OP_INVOKE_INTERFACE_RANGE, "INVOKE_INTERFACE_RANGE"},
    {DEX_OP_NEG_INT, "NEG_INT"},
    {DEX_OP_NOT_INT, "NOT_INT"},
    {DEX_OP_NEG_LONG, "NEG_LONG"},
    {DEX_OP_NOT_LONG, "NOT_LONG"},
    {DEX_OP_NEG_FLOAT, "NEG_FLOAT"},
    {DEX_OP_NEG_DOUBLE, "NEG_DOUBLE"},
    {DEX_OP_INT_TO_LONG, "INT_TO_LONG"},
    {DEX_OP_INT_TO_FLOAT, "INT_TO_FLOAT"},
    {DEX_OP_INT_TO_DOUBLE, "INT_TO_DOUBLE"},
    {DEX_OP_LONG_TO_INT, "LONG_TO_INT"},
    {DEX_OP_LONG_TO_FLOAT, "LONG_TO_FLOAT"},
    {DEX_OP_LONG_TO_DOUBLE, "LONG_TO_DOUBLE"},
    {DEX_OP_FLOAT_TO_INT, "FLOAT_TO_INT"},
    {DEX_OP_FLOAT_TO_LONG, "FLOAT_TO_LONG"},
    {DEX_OP_FLOAT_TO_DOUBLE, "FLOAT_TO_DOUBLE"},
    {DEX_OP_DOUBLE_TO_INT, "DOUBLE_TO_INT"},
    {DEX_OP_DOUBLE_TO_LONG, "DOUBLE_TO_LONG"},
    {DEX_OP_DOUBLE_TO_FLOAT, "DOUBLE_TO_FLOAT"},
    {DEX_OP_INT_TO_BYTE, "INT_TO_BYTE"},
    {DEX_OP_INT_TO_CHAR, "INT_TO_CHAR"},
    {DEX_OP_INT_TO_SHORT, "INT_TO_SHORT"},
    {DEX_OP_ADD_INT, "ADD_INT"},
    {DEX_OP_SUB_INT, "SUB_INT"},
    {DEX_OP_MUL_INT, "MUL_INT"},
    {DEX_OP_DIV_INT, "DIV_INT"},
    {DEX_OP_REM_INT, "REM_INT"},
    {DEX_OP_AND_INT, "AND_INT"},
    {DEX_OP_OR_INT, "OR_INT"},
    {DEX_OP_XOR_INT, "XOR_INT"},
    {DEX_OP_SHL_INT, "SHL_INT"},
    {DEX_OP_SHR_INT, "SHR_INT"},
    {DEX_OP_USHR_INT, "USHR_INT"},
    {DEX_OP_ADD_LONG, "ADD_LONG"},
    {DEX_OP_SUB_LONG, "SUB_LONG"},
    {DEX_OP_MUL_LONG, "MUL_LONG"},
    {DEX_OP_DIV_LONG, "DIV_LONG"},
    {DEX_OP_REM_LONG, "REM_LONG"},
    {DEX_OP_AND_LONG, "AND_LONG"},
    {DEX_OP_OR_LONG, "OR_LONG"},
    {DEX_OP_XOR_LONG, "XOR_LONG"},
    {DEX_OP_SHL_LONG, "SHL_LONG"},
    {DEX_OP_SHR_LONG, "SHR_LONG"},
    {DEX_OP_USHR_LONG, "USHR_LONG"},
    {DEX_OP_ADD_FLOAT, "ADD_FLOAT"},
    {DEX_OP_SUB_FLOAT, "SUB_FLOAT"},
    {DEX_OP_MUL_FLOAT, "MUL_FLOAT"},
    {DEX_OP_DIV_FLOAT, "DIV_FLOAT"},
    {DEX_OP_REM_FLOAT, "REM_FLOAT"},
    {DEX_OP_ADD_DOUBLE, "ADD_DOUBLE"},
    {DEX_OP_SUB_DOUBLE, "SUB_DOUBLE"},
    {DEX_OP_MUL_DOUBLE, "MUL_DOUBLE"},
    {DEX_OP_DIV_DOUBLE, "DIV_DOUBLE"},
    {DEX_OP_REM_DOUBLE, "REM_DOUBLE"},
    {DEX_OP_ADD_INT_2ADDR, "ADD_INT_2ADDR"},
    {DEX_OP_SUB_INT_2ADDR, "SUB_INT_2ADDR"},
    {DEX_OP_MUL_INT_2ADDR, "MUL_INT_2ADDR"},
    {DEX_OP_DIV_INT_2ADDR, "DIV_INT_2ADDR"},
    {DEX_OP_REM_INT_2ADDR, "REM_INT_2ADDR"},
    {DEX_OP_AND_INT_2ADDR, "AND_INT_2ADDR"},
    {DEX_OP_OR_INT_2ADDR, "OR_INT_2ADDR"},
    {DEX_OP_XOR_INT_2ADDR, "XOR_INT_2ADDR"},
    {DEX_OP_SHL_INT_2ADDR, "SHL_INT_2ADDR"},
    {DEX_OP_SHR_INT_2ADDR, "SHR_INT_2ADDR"},
    {DEX_OP_USHR_INT_2ADDR, "USHR_INT_2ADDR"},
    {DEX_OP_ADD_LONG_2ADDR, "ADD_LONG_2ADDR"},
    {DEX_OP_SUB_LONG_2ADDR, "SUB_LONG_2ADDR"},
    {DEX_OP_MUL_LONG_2ADDR, "MUL_LONG_2ADDR"},
    {DEX_OP_DIV_LONG_2ADDR, "DIV_LONG_2ADDR"},
    {DEX_OP_REM_LONG_2ADDR, "REM_LONG_2ADDR"},
    {DEX_OP_AND_LONG_2ADDR, "AND_LONG_2ADDR"},
    {DEX_OP_OR_LONG_2ADDR, "OR_LONG_2ADDR"},
    {DEX_OP_XOR_LONG_2ADDR, "XOR_LONG_2ADDR"},
    {DEX_OP_SHL_LONG_2ADDR, "SHL_LONG_2ADDR"},
    {DEX_OP_SHR_LONG_2ADDR, "SHR_LONG_2ADDR"},
    {DEX_OP_USHR_LONG_2ADDR, "USHR_LONG_2ADDR"},
    {DEX_OP_ADD_FLOAT_2ADDR, "ADD_FLOAT_2ADDR"},
    {DEX_OP_SUB_FLOAT_2ADDR, "SUB_FLOAT_2ADDR"},
    {DEX_OP_MUL_FLOAT_2ADDR, "MUL_FLOAT_2ADDR"},
    {DEX_OP_DIV_FLOAT_2ADDR, "DIV_FLOAT_2ADDR"},
    {DEX_OP_REM_FLOAT_2ADDR, "REM_FLOAT_2ADDR"},
    {DEX_OP_ADD_DOUBLE_2ADDR, "ADD_DOUBLE_2ADDR"},
    {DEX_OP_SUB_DOUBLE_2ADDR, "SUB_DOUBLE_2ADDR"},
    {DEX_OP_MUL_DOUBLE_2ADDR, "MUL_DOUBLE_2ADDR"},
    {DEX_OP_DIV_DOUBLE_2ADDR, "DIV_DOUBLE_2ADDR"},
    {DEX_OP_REM_DOUBLE_2ADDR, "REM_DOUBLE_2ADDR"},
    {DEX_OP_ADD_INT_LIT16, "ADD_INT_LIT16"},
    {DEX_OP_RSUB_INT, "RSUB_INT"},
    {DEX_OP_MUL_INT_LIT16, "MUL_INT_LIT16"},
    {DEX_OP_DIV_INT_LIT16, "DIV_INT_LIT16"},
    {DEX_OP_REM_INT_LIT16, "REM_INT_LIT16"},
    {DEX_OP_AND_INT_LIT16, "AND_INT_LIT16"},
    {DEX_OP_OR_INT_LIT16, "OR_INT_LIT16"},
    {DEX_OP_XOR_INT_LIT16, "XOR_INT_LIT16"},
    {DEX_OP_ADD_INT_LIT8, "ADD_INT_LIT8"},
    {DEX_OP_RSUB_INT_LIT8, "RSUB_INT_LIT8"},
    {DEX_OP_MUL_INT_LIT8, "MUL_INT_LIT8"},
    {DEX_OP_DIV_INT_LIT8, "DIV_INT_LIT8"},
    {DEX_OP_REM_INT_LIT8, "REM_INT_LIT8"},
    {DEX_OP_AND_INT_LIT8, "AND_INT_LIT8"},
    {DEX_OP_OR_INT_LIT8, "OR_INT_LIT8"},
    {DEX_OP_XOR_INT_LIT8, "XOR_INT_LIT8"},
    {DEX_OP_SHL_INT_LIT8, "SHL_INT_LIT8"},
    {DEX_OP_SHR_INT_LIT8, "SHR_INT_LIT8"},
    {DEX_OP_USHR_INT_LIT8, "USHR_INT_LIT8"},
};

#endif  // DEX_NAMEMAP_H_
